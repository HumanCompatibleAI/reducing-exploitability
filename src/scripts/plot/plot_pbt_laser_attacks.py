from pathlib import Path

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

from scripts.plot.common import get_run_df
from scripts.plot.stylesheets import setup_styles


import pickle

legend = True
log_name = "adversary_reward"
groups = [
    "icml-cam-attack-long-laser-4",
    "attack-pbt-laser-20-v2",
    "attack-pbt-laser-40-v2",
    "attack-pbt-laser-60-v2",
    "attack-pbt-laser-80-v2",
]
names = ["Self-play", "PBT-20", "PBT-40", "PBT-60", "PBT-80"]
colors = ["red", "blue", "green", "orange", "purple"]
max = 50_000_000
if legend:
    sheet = "training-curve-1col-tall-legend"
else:
    sheet = "training-curve-1col-tall-no-legend"
with setup_styles(["paper", sheet]):
    for group, name, color in zip(groups, names, colors):

        filename = "a_" + group + ".pkl"

        if not Path(filename).is_file():
            print("File does not exist, getting from wandb")
            df = get_run_df(group, log_name, max_step=max)
            df.to_pickle(filename)
        else:
            print("Found file, loading")
            with Path(filename).open("rb") as file:
                df = pickle.load(file)

        ax = sns.lineplot(
            x="timestep",
            y="value",
            data=pd.melt(df, ["timestep"]),
            hue="variable",
            palette=[color],
            ci=False,
            legend=False,
            label=name,
        )

    ax.set(ylim=(-500, 500))
    ax.axhline(0, color="black", linestyle="--", label="Zero")

    if legend:
        ax.legend(
            title="Victim", bbox_to_anchor=(1.02, 1), loc="upper left", borderaxespad=0
        )

    ax.set_xlabel("Timestep")
    ax.set_ylabel("Return")
    # fig = plt.figure(figsize=(10, 5))
    plt.xticks([0, 1e7, 2e7, 3e7, 4e7, 5e7])
    # plt.show()
    plt.savefig("attack-laser-pbt-curves.pdf")
