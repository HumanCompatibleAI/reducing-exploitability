from collections import defaultdict
from typing import Optional

import pandas as pd
import wandb


def get_run_df(group: str, log_name: str, max: Optional[int] = None) -> pd.DataFrame:
    api = wandb.Api()
    runs = api.runs(
        path="chaiberkeley/pbrl-defense-icml",
        filters={"config.wandb_group": group},
    )
    df = pd.DataFrame()
    counter = defaultdict(int)
    for i, run in enumerate(runs):
        print(run.summary)
        history = run.scan_history()
        values = []
        for row in history:
            if log_name in row and (max is None or row["timestep"] < max):
                values.append((row["timestep"], row[log_name]))
                counter[row["timestep"]] += 1
        df = df.append(pd.DataFrame(values, columns=["timestep", f"return"]))
    counter_counter = defaultdict(int)
    for ts, count in counter.items():
        counter_counter[count] += 1
    # Sanity check
    print(counter_counter)

    return df
