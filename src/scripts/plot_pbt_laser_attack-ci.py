from pathlib import Path

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

from scripts.common import get_run_df
from scripts.stylesheets import setup_styles

# run = api.run("chaiberkeley/pbrl-defense-icml/seqb62s8")
#
# print(run.config)
# print(run.history())
# print(run.summary)
import pickle

log_name = "adversary_reward"

groups = [
    "attack-pbt-laser-20-v2",
    "attack-pbt-laser-40-v2",
    "attack-pbt-laser-60-v2",
    "attack-pbt-laser-80-v2",
]
names = ["PBRL-20", "PBRL-40", "PBRL-60", "PBRL-80"]
colors = ["blue", "green", "orange", "purple"]
max = 50_000_000

with setup_styles(["paper", "training-curve-laser-ci"]):
    for i, (group, name, color) in enumerate(zip(groups, names, colors)):
        plt.figure()

        for group, name, color in [
            ("icml-cam-attack-long-laser-4", "Self-play", "red"),
            (group, name, color),
        ]:
            filename = "a_" + group + ".pkl"

            if not Path(filename).is_file():
                print("File does not exist, getting from wandb")
                df = get_run_df(group, log_name, max_step=max)
                df.to_pickle(filename)
            else:
                print("Found file, loading")
                with Path(filename).open("rb") as file:
                    df = pickle.load(file)

            ax = sns.lineplot(
                x="timestep",
                y="value",
                data=pd.melt(df, ["timestep"]),
                hue="variable",
                palette=[color],
                # ci=False,
                legend=False,
                label=name,
            )

        ax.set(ylim=(-1000, 500))
        ax.axhline(0, color="black", linestyle="--", label="Zero")

        ax.set_xlabel("Timestep")
        ax.set_ylabel("")
        # fig = plt.figure(figsize=(10, 5))
        plt.xticks([0, 1e7, 2e7, 3e7, 4e7, 5e7])
        # Remove y tick labels
        # if i != 0:
        #     plt.yticks(ticks=[-1000, -750, -500,-250, 0,250,500],labels=["","","","","","",""])
        # plt.show()
        plt.savefig(f"{name}.pdf")
