import argparse
import os

parser = argparse.ArgumentParser("Sweep victim attack")
parser.add_argument('--option', choices=['a', 'b', 'c', 'd', 'e', 'all'], required=True)

args = parser.parse_args()

attacks_per_victim = 5

# env = "mpe_simple_push_comm_50"
env = 'os_laser_tag_zs'
# env = 'pz_rps'

project_name = 'reproduce-systematic'

max_timesteps = 10000000

policies = [
    # (0, 'policy_1'),
    (1, 'main'),
]
description_a = 'attack commit 4.5'
a = [  # laser tag
    '1j3pvr74:v4'
]
description_b = '75-rnn-later-commit'
b = [
    'y2z5o2qu:v4'
]
description_c = '75-aws'
c = [
    # '340p0irk:v9'
]
description_d = '75-aws'
d = [
    # '3axqcihg:v9'
]
description_e = '75-aws'
e = [
    # '3n2frc8k:v9'
]
parallel = ""
if args.option == 'a':  # simple push dim 25 normal self play
    victims = a
    description = description_a
elif args.option == 'b':
    victims = b
    description = description_b
elif args.option == 'c':
    victims = c
    description = description_c
elif args.option == 'd':
    victims = d
    description = description_d
elif args.option == 'e':
    victims = e
    description = description_e
elif args.option == 'all':
    victims = a + b + c + d + e
    parallel = '&'
    description = description_a
else:
    raise NotImplementedError()

for i in range(attacks_per_victim):
    for (adv_id, victim_policy) in policies:
        for victim in victims:
            os.system(
                f"python -m aprl_defense.train --out-path /scratch/pavel/out/  --wandb-group {project_name} --alg ppo --mode finetune --adv-id {adv_id} --victim-policy-name {victim_policy}" +
                f' --max-timesteps {max_timesteps} --num-workers 10'
                f' --victim-artifact {victim} --description "{description}" --env {env}'
                ' --override "{\\"framework\\":\\"tf\\"}"'
                f' {parallel} '
            )
