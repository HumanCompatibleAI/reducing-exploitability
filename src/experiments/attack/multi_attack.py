import argparse
import os

# victims = [
#     # ('1rrkm8fq', 'ops:10,exp:-1'), already done
#     ('x2j1joii', 'ops:10,exp:1'),
#     ('1kb1pw6q', 'ops:10,exp:2'),
#     ('13o7gmd6', 'ops:10,exp:4'),
#     ('p6awk5ox', 'ops:10,exp:8'),
#     ('2r6dv5lf', 'ops:20,exp:-1'),
#     ('3q9ym0u3', 'ops:20,exp:1'),
#     ('4sx6opvq', 'ops:20,exp:2'),
#     ('1xajoibu', 'ops:20,exp:4'),
#     ('pkkief88', 'ops:20,exp:8'),
#     # ('31o3gkmq', 'ops:30,exp:-1') not yet
# ]
parser = argparse.ArgumentParser("Sweep victim attack")
parser.add_argument('--option', choices=['a', 'b', 'c', 'd', 'e', 'all'], required=True)
# parser.add_argument('--adv-id', choices=['0', '1', 'both'], required=True)
args = parser.parse_args()

attacks_per_victim = 3

# available_policies = [
#     (0, 'policy_1'),
#     (1, 'policy_0'),
# ]

# if args.adv_id == '0':
#     policies = [available_policies[0]]
# elif args.adv_id == '1':
#     policies = [available_policies[1]]
# elif args.adv_id == 'both':
#     policies = available_policies
# else:
#     raise NotImplementedError()

policies = [
    (0, 'policy_1'),
    (1, 'policy_0'),
]

a = [
    '14-stability/1kwb6h7t:v19'
]
b = [
    '14-stability/291wv8p1:v19'
]
c = [
    '14-stability/2cbr0ol0:v19'
]
d = [
    '14-stability/3f8j8kmn:v19'
]
e = [
    '14-stability/e4tua8zk:v19'
]
parallel = ""
if args.option == 'a':  # simple push dim 25 normal self play
    victims = a
elif args.option == 'b':
    victims = b
elif args.option == 'c':
    victims = c
elif args.option == 'd':
    victims = d
elif args.option == 'e':
    victims = e
elif args.option == 'all':
    victims = a + b + c + d + e
    parallel = '&'
else:
    raise NotImplementedError()

# victims = [  # Simple push with communication on rnn
#     '34aphnzq',
#     '2uhlxvzu',
#     '3h90dkz7',
#     '29wzrlx7',
#     '2xafftpw',
#     '1oct0lga',
#     '3b4sol4r',
#     '5hwd3qsd',
#     '2qvmbqhu',
#     '1eefhkpm'
# ]

# victims = ['2qjb9qso', normal simple push, svm
#            '1vqsnfzs',
#            '2nqomi4d',
#            '28p7l83y',
#            '3juxjbos',
#            '3spmkqei',
#            '26m8i5ur',
#            '27bvd59k',
#            '1k92hc8r',
#            '27bg537a'
#            ]

# victims = [  # Victims with 1 - 10 ops
#     ('34bhfiht', 'num_ops:1'),
#     ('3ndlf0hh', 'num_ops:2'),
#     ('z8mzc8i7', 'num_ops:3'),
#     ('180o3id2', 'num_ops:4'),
#     ('1sqawmrm', 'num_ops:5'),
#     ('2vkawngv', 'num_ops:6'),
#     ('2dxvknoi', 'num_ops:7'),
#     ('35m5i0ah', 'num_ops:8'),
#     ('3e3jlkux', 'num_ops:9'),
#     ('3gaggmls', 'num_ops:10'),
# ]
#
# victims = [
#     ('inxezlzy', 'num_ops:20'),
#     ('1o90ocy5', 'num_ops:30'),
#     ('3uszlvsa', 'num_ops:40'),
#     ('1gzlunju', 'num_ops:50'),
#     ('qatt5pq4', 'num_ops:60'),
#     ('wjzf97yz', 'num_ops:70'),
#     ('34gugs5t', 'num_ops:80'),
#     ('xihugnpd', 'num_ops:90'),
#     ('39pktlwz', 'num_ops:100'),
# ]
for i in range(attacks_per_victim):
    for (adv_id, victim_policy) in policies:
        for victim in victims:
            os.system(
                f"python -m aprl_defense.train --wandb-project 19-comm-50 --alg ppo --mode finetune --adv-id {adv_id} --victim-policy-name {victim_policy}" +
                ' --max-timesteps 20000000 --num-workers 5'
                f' --victim-artifact {victim} --description "attack-sp-a" --env mpe_simple_push_comm_50 {parallel}'
            )
