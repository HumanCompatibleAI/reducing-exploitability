import numpy as np

from aprl_defense.eval import multi_eval

checkpoints_folder_main = "/scratch/pavel/out/8-self-play/"

main_alg = 'ppo'

# (attack_folder, victim_folder, adv_id)
main_folders = [('2e5kpmzh', '2qjb9qso', 1),
                ('3mr4nfyr', '2qjb9qso', 0),
                ('1v90kucq', '1vqsnfzs', 1),
                ('2wzj0fg1', '1vqsnfzs', 0),
                ('m86ujamn', '2nqomi4d', 1),
                ('2ekbotg9', '2nqomi4d', 0),
                ('nqfz9f2z', '28p7l83y', 1),
                ('3417h6oy', '28p7l83y', 0),
                ('gq1dr38j', '3juxjbos', 0),
                ('td0pitwo', '3juxjbos', 1),
                ('s1yjn93z', '3spmkqei', 0),
                ('1ygtoxzx', '3spmkqei', 1),
                ('2d6c75zn', '26m8i5ur', 1),
                ('2cw6d2ht', '26m8i5ur', 0),
                ('o76j020j', '27bvd59k', 1),
                ('2bhbx53i', '27bvd59k', 1),
                ('eygxt41f', '1k92hc8r', 0),
                ('t0zsjp1s', '1k92hc8r', 0),
                ('3t0h4p6o', '27bg537a', 0),
                ('udi9nso1', '27bg537a', 1),
                ]
num_steps = 100000
local_mode = False

print(f"folders: {main_folders}")

rewards_0 = []
rewards_1 = []

runs = 0
for (attack_folder, victim_folder, adv_id) in main_folders:
    runs += 1
    if adv_id == 1:
        agent_paths = [checkpoints_folder_main + victim_folder, checkpoints_folder_main + attack_folder]
    elif adv_id == 0:
        agent_paths = [checkpoints_folder_main + attack_folder, checkpoints_folder_main + victim_folder]
    else:
        raise ValueError(f'Unsupported adv_id={adv_id}')
    results = multi_eval(agent_algs=[main_alg, main_alg],
                         agent_paths=agent_paths,
                         agent_to_policy_name=['policy_0', 'policy_1'],
                         num_steps=num_steps,
                         render=False,
                         local_mode=local_mode)
    if adv_id == 0:
        rewards_0.append(results['mean_rewards'][0])
    elif adv_id == 1:
        rewards_1.append(results['mean_rewards'][1])
    else:
        pass

print(f'Performed {runs} runs')

mean_0 = np.mean(rewards_0)
mean_1 = np.mean(rewards_1)

std_0 = np.std(rewards_0)
std_1 = np.std(rewards_1)

print('===== FINAL RESULTS =====')

print(f'mean_0: {mean_0:.3f}')
print(f'mean_1: {mean_1:.3f}')
print(f'std_0: {std_0:.3f}')
print(f'std_1: {std_1:.3f}')
